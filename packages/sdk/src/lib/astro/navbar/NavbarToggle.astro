---
import type { HTMLAttributes } from 'astro/types';
import twMerge from '../../tailwind/tailwind-merge';

type Props = Omit<HTMLAttributes<'button'>, 'class'> & {
  class?: ClassName;
  custom?: Record<string, ClassName>;
  size?: string | number;
};
const { class: className, custom, size = 32, ...props } = Astro.props;
---

<button
  is='app-navbar-toggle'
  id='app-navbar-toggle'
  class={twMerge(custom?.icon, className, custom?.toggle)}
  aria-label='menu toggle'
  aria-expanded='false'
  aria-controls='app-navbar-menu'
  {...props}
  data-navbar-toggle>
  <slot>
    <svg
      class='disabled linecap-round linejoin-round vector-non-scaling-stroke'
      xmlns='http://www.w3.org/2000/svg'
      width={size}
      height={size}
      viewBox='0 0 24 24'
      fill='currentColor'>
      <path
        class:list={[
          '[[aria-expanded="true"]_&]:opacity-0',
          'transition-opacity duration-300 ease-in-out'
        ]}
        d='M4 18h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zm0-5h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zM3 7c0 .55.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1z'
      ></path>
      <path
        class:list={[
          'opacity-0 [[aria-expanded="true"]_&]:opacity-100',
          'transition-opacity duration-300 ease-in-out'
        ]}
        d='M18.3 5.71a.996.996 0 0 0-1.41 0L12 10.59L7.11 5.7A.996.996 0 1 0 5.7 7.11L10.59 12L5.7 16.89a.996.996 0 1 0 1.41 1.41L12 13.41l4.89 4.89a.996.996 0 1 0 1.41-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z'
      ></path>
    </svg>
  </slot>
</button>

<script>
  import { status } from '../../app/stores';

  class AppNavbarToggle extends HTMLButtonElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.addEventListener('click', (ev: Event) => {
        ev.preventDefault();
        status.setKey('navbar.hidden', !status.get().navbar.hidden);
      });

      status.listen((val, key) => {
        if (key === 'navbar.hidden') {
          console.log('hidden: ', val.navbar.hidden);
          this.setAttribute('aria-expanded', `${!val.navbar.hidden}`);
        }
      });
    }
  }

  customElements.define('app-navbar-toggle', AppNavbarToggle, { extends: 'button' });
</script>
