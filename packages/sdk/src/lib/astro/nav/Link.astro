---
import type { HTMLAttributes } from 'astro/types';
import twMerge from '../../tailwind/tailwind-merge';

type Props = Omit<HTMLAttributes<'a'>, 'class'> & {
  class?: ClassName;
  label?: string;
  size?: string | number;
};

const { href, class: className, label, ...props } = Astro.props;

const current =
  Astro.url.pathname === href || Astro.url.pathname === `${href}/`
    ? 'page'
    : Astro.url.pathname.indexOf(`${href}/`) >= 0
    ? 'step'
    : undefined;
---

<a
  is='app-link'
  class={twMerge('page:disabled', className)}
  {href}
  aria-label={label}
  aria-current={current}
  {...props}>
  <slot name='before' />
  <slot>
    {label}
  </slot>
  <slot name='after' />
</a>

<script>
  class AppLink extends HTMLAnchorElement {
    constructor() {
      super();
    }

    connectedCallback() {
      document.addEventListener('astro:after-swap', this.check);
    }

    disconnectedCallback() {
      document.removeEventListener('astro:after-swap', this.check, true);
    }

    set current(val: string | null) {
      val ? this.setAttribute('aria-current', val) : this.removeAttribute('aria-current');
    }

    check = () => {
      this.current =
        location.pathname === this.pathname || location.pathname === `${this.pathname}/`
          ? 'page'
          : location.pathname.indexOf(`${this.pathname}/`) >= 0
          ? 'step'
          : null;
    };
  }

  customElements.define('app-link', AppLink, { extends: 'a' });
</script>
