---
// import type { HTMLAttributes } from 'astro/types';
import twMerge from '../../tailwind/tailwind-merge';
import Icon from '../icon/Icon.astro';
import Link from './Link.astro';
import type { IconKeysExt } from '../../app/icons';
import type { NavItem } from '.';

interface Props extends Omit<NavItem, 'icon'> {
  icon?:
    | IconKeysExt
    | {
        home: IconKeysExt;
        page: IconKeysExt;
      };
}

const {
  icon = {
    home: 'house-simple-duotone',
    page: 'house-duotone'
  },
  class: className,
  label,
  ...props
} = Astro.props;
---

<Link
  rel='prefetch'
  class={twMerge('group flex h-7 items-center gap-x-4', className)}
  href='/'
  label={label ?? 'home page'}
  {...props}>
  <slot name='before'>
    {
      typeof icon === 'string' ? (
        <Icon
          {icon}
          class='h-full w-auto disabled'
        />
      ) : (
        <>
          <Icon
            icon={icon.home}
            class={['h-full w-auto disabled', 'hidden group-[[aria-current="page"]]:block']}
          />
          <Icon
            icon={icon.page}
            class={['h-full w-auto disabled', 'group-[[aria-current="page"]]:hidden']}
          />
        </>
      )
    }
  </slot>
  <slot>
    {
      label && (
        <span
          class='whitespace-nowrap text-base uppercase tracking-widest'
          set:html={label}
        />
      )
    }
  </slot>
  <slot name='after' />
</Link>
